{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":["file:///Users/didershine/Documents/accessibility-dashboard/lib/prisma.ts"],"sourcesContent":["import { PrismaClient } from \"@prisma/client\";\n\nconst globalForPrisma = global as unknown as { prisma: PrismaClient };\n\nexport const prisma =\n  globalForPrisma.prisma || new PrismaClient();\n\nif (process.env.NODE_ENV !== \"production\") globalForPrisma.prisma = prisma;"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,kBAAkB;AAEjB,MAAM,SACX,gBAAgB,MAAM,IAAI,IAAI,6HAAA,CAAA,eAAY;AAE5C,wCAA2C,gBAAgB,MAAM,GAAG","debugId":null}},
    {"offset": {"line": 162, "column": 0}, "map": {"version":3,"sources":["file:///Users/didershine/Documents/accessibility-dashboard/app/api/issues/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport { getServerSession } from 'next-auth';\nimport { prisma } from '@/lib/prisma';\n\nexport async function GET() {\n  try {\n    const session = await getServerSession();\n    \n    if (!session?.user) {\n      return NextResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const issues = await prisma.accessibilityIssue.findMany({\n      where: {\n        userId: session.user.id,\n        status: 'open'\n      },\n      orderBy: {\n        severity: 'desc'\n      }\n    });\n\n    return NextResponse.json({ issues });\n  } catch (error) {\n    console.error('Error fetching issues:', error);\n    return NextResponse.json({ error: 'Failed to fetch issues' }, { status: 500 });\n  }\n} "],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAEO,eAAe;IACpB,IAAI;QACF,MAAM,UAAU,MAAM,CAAA,GAAA,uIAAA,CAAA,mBAAgB,AAAD;QAErC,IAAI,CAAC,SAAS,MAAM;YAClB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAe,GAAG;gBAAE,QAAQ;YAAI;QACpE;QAEA,MAAM,SAAS,MAAM,+GAAA,CAAA,SAAM,CAAC,kBAAkB,CAAC,QAAQ,CAAC;YACtD,OAAO;gBACL,QAAQ,QAAQ,IAAI,CAAC,EAAE;gBACvB,QAAQ;YACV;YACA,SAAS;gBACP,UAAU;YACZ;QACF;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE;QAAO;IACpC,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,0BAA0B;QACxC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAyB,GAAG;YAAE,QAAQ;QAAI;IAC9E;AACF","debugId":null}}]
}