{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":["file:///Users/didershine/Documents/accessibility-dashboard/lib/prisma.ts"],"sourcesContent":["import { PrismaClient } from \"@prisma/client\";\n\nconst globalForPrisma = global as unknown as { prisma: PrismaClient };\n\nexport const prisma =\n  globalForPrisma.prisma || new PrismaClient();\n\nif (process.env.NODE_ENV !== \"production\") globalForPrisma.prisma = prisma;"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,kBAAkB;AAEjB,MAAM,SACX,gBAAgB,MAAM,IAAI,IAAI,6HAAA,CAAA,eAAY;AAE5C,wCAA2C,gBAAgB,MAAM,GAAG","debugId":null}},
    {"offset": {"line": 170, "column": 0}, "map": {"version":3,"sources":["file:///Users/didershine/Documents/accessibility-dashboard/app/api/stripe-portal/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\nimport Stripe from \"stripe\";\nimport { getServerSession } from \"next-auth\";\nimport { prisma } from \"@/lib/prisma\";\n\nconst stripe = new Stripe(process.env.STRIPE_SECRET_KEY!, { apiVersion: \"2023-10-16\" });\n\nexport async function POST() {\n  const session = await getServerSession();\n  if (!session?.user?.email) {\n    return NextResponse.json({ error: \"Not authenticated\" }, { status: 401 });\n  }\n  const user = await prisma.user.findUnique({ where: { email: session.user.email } });\n  if (!user || !user.stripeCustomerId) {\n    return NextResponse.json({ error: \"No Stripe customer found\" }, { status: 400 });\n  }\n  const portalSession = await stripe.billingPortal.sessions.create({\n    customer: user.stripeCustomerId,\n    return_url: process.env.NEXT_PUBLIC_BASE_URL + \"/dashboard\",\n  });\n  return NextResponse.json({ url: portalSession.url });\n} "],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;;;;;AAEA,MAAM,SAAS,IAAI,wJAAA,CAAA,UAAM,CAAC,QAAQ,GAAG,CAAC,iBAAiB,EAAG;IAAE,YAAY;AAAa;AAE9E,eAAe;IACpB,MAAM,UAAU,MAAM,CAAA,GAAA,uIAAA,CAAA,mBAAgB,AAAD;IACrC,IAAI,CAAC,SAAS,MAAM,OAAO;QACzB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAoB,GAAG;YAAE,QAAQ;QAAI;IACzE;IACA,MAAM,OAAO,MAAM,+GAAA,CAAA,SAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QAAE,OAAO;YAAE,OAAO,QAAQ,IAAI,CAAC,KAAK;QAAC;IAAE;IACjF,IAAI,CAAC,QAAQ,CAAC,KAAK,gBAAgB,EAAE;QACnC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAA2B,GAAG;YAAE,QAAQ;QAAI;IAChF;IACA,MAAM,gBAAgB,MAAM,OAAO,aAAa,CAAC,QAAQ,CAAC,MAAM,CAAC;QAC/D,UAAU,KAAK,gBAAgB;QAC/B,YAAY,gFAAmC;IACjD;IACA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAAE,KAAK,cAAc,GAAG;IAAC;AACpD","debugId":null}}]
}