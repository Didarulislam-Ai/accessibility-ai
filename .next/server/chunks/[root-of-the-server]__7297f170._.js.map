{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":["file:///Users/didershine/Documents/accessibility-dashboard/lib/prisma.ts"],"sourcesContent":["import { PrismaClient } from \"@prisma/client\";\n\nconst globalForPrisma = global as unknown as { prisma: PrismaClient };\n\nexport const prisma =\n  globalForPrisma.prisma || new PrismaClient();\n\nif (process.env.NODE_ENV !== \"production\") globalForPrisma.prisma = prisma;"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,kBAAkB;AAEjB,MAAM,SACX,gBAAgB,MAAM,IAAI,IAAI,6HAAA,CAAA,eAAY;AAE5C,wCAA2C,gBAAgB,MAAM,GAAG","debugId":null}},
    {"offset": {"line": 162, "column": 0}, "map": {"version":3,"sources":["file:///Users/didershine/Documents/accessibility-dashboard/lib/authOptions.ts"],"sourcesContent":["// lib/authOptions.ts\nimport { PrismaAdapter } from \"@auth/prisma-adapter\";\nimport { prisma } from \"@/lib/prisma\";\nimport GoogleProvider from \"next-auth/providers/google\";\nimport { NextAuthOptions } from \"next-auth\";\n\n// Extend the built-in session types\ndeclare module \"next-auth\" {\n  interface Session {\n    user: {\n      id: string;\n      name?: string | null;\n      email?: string | null;\n      image?: string | null;\n    }\n  }\n}\n\nexport const authOptions: NextAuthOptions = {\n  adapter: PrismaAdapter(prisma),\n  providers: [\n    GoogleProvider({\n      clientId: process.env.GOOGLE_CLIENT_ID!,\n      clientSecret: process.env.GOOGLE_CLIENT_SECRET!,\n    }),\n  ],\n  secret: process.env.NEXTAUTH_SECRET,\n  session: { strategy: \"database\" },\n  debug: process.env.NODE_ENV === \"development\",\n  callbacks: {\n    async session({ session, user }) {\n      if (session.user) {\n        session.user.id = user.id;\n      }\n      return session;\n    },\n  },\n};"],"names":[],"mappings":"AAAA,qBAAqB;;;;AACrB;AACA;AACA;;;;AAeO,MAAM,cAA+B;IAC1C,SAAS,CAAA,GAAA,sJAAA,CAAA,gBAAa,AAAD,EAAE,+GAAA,CAAA,SAAM;IAC7B,WAAW;QACT,CAAA,GAAA,qJAAA,CAAA,UAAc,AAAD,EAAE;YACb,UAAU,QAAQ,GAAG,CAAC,gBAAgB;YACtC,cAAc,QAAQ,GAAG,CAAC,oBAAoB;QAChD;KACD;IACD,QAAQ,QAAQ,GAAG,CAAC,eAAe;IACnC,SAAS;QAAE,UAAU;IAAW;IAChC,OAAO,oDAAyB;IAChC,WAAW;QACT,MAAM,SAAQ,EAAE,OAAO,EAAE,IAAI,EAAE;YAC7B,IAAI,QAAQ,IAAI,EAAE;gBAChB,QAAQ,IAAI,CAAC,EAAE,GAAG,KAAK,EAAE;YAC3B;YACA,OAAO;QACT;IACF;AACF","debugId":null}},
    {"offset": {"line": 200, "column": 0}, "map": {"version":3,"sources":["file:///Users/didershine/Documents/accessibility-dashboard/app/api/account/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\nimport { getServerSession } from \"next-auth\";\nimport { authOptions } from \"@/lib/authOptions\";\nimport { prisma } from \"@/lib/prisma\";\n\nexport async function GET() {\n  const session = await getServerSession(authOptions);\n  if (!session?.user?.email) {\n    return NextResponse.json({ error: \"Not authenticated\" }, { status: 401 });\n  }\n  const user = await prisma.user.findUnique({\n    where: { email: session.user.email },\n    include: {\n      subscriptions: {\n        where: { status: \"active\" },\n        orderBy: { createdAt: \"desc\" },\n        take: 1,\n      },\n    },\n  });\n  if (!user) {\n    return NextResponse.json({ error: \"User not found\" }, { status: 404 });\n  }\n  const subscription = user.subscriptions[0] || null;\n  return NextResponse.json({\n    apiKey: subscription?.apiKey || null,\n    plan: subscription?.plan || null,\n    status: subscription?.status || null,\n    expiresAt: subscription?.expiresAt || null,\n  });\n} "],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;;;;;AAEO,eAAe;IACpB,MAAM,UAAU,MAAM,CAAA,GAAA,uIAAA,CAAA,mBAAgB,AAAD,EAAE,oHAAA,CAAA,cAAW;IAClD,IAAI,CAAC,SAAS,MAAM,OAAO;QACzB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAoB,GAAG;YAAE,QAAQ;QAAI;IACzE;IACA,MAAM,OAAO,MAAM,+GAAA,CAAA,SAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QACxC,OAAO;YAAE,OAAO,QAAQ,IAAI,CAAC,KAAK;QAAC;QACnC,SAAS;YACP,eAAe;gBACb,OAAO;oBAAE,QAAQ;gBAAS;gBAC1B,SAAS;oBAAE,WAAW;gBAAO;gBAC7B,MAAM;YACR;QACF;IACF;IACA,IAAI,CAAC,MAAM;QACT,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAiB,GAAG;YAAE,QAAQ;QAAI;IACtE;IACA,MAAM,eAAe,KAAK,aAAa,CAAC,EAAE,IAAI;IAC9C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QACvB,QAAQ,cAAc,UAAU;QAChC,MAAM,cAAc,QAAQ;QAC5B,QAAQ,cAAc,UAAU;QAChC,WAAW,cAAc,aAAa;IACxC;AACF","debugId":null}}]
}